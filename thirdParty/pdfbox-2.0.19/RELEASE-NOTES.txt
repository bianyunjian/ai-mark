Release Notes -- Apache PDFBox -- Version 2.0.19

Introduction
------------

The Apache PDFBox library is an open source Java tool for working with PDF documents.

This is an incremental bugfix release based on the earlier 2.0.18 release. It contains
a couple of fixes and small improvements.

For more details on these changes and all the other fixes and improvements
included in this release, please refer to the following issues on the
PDFBox issue tracker at https://issues.apache.org/jira/browse/PDFBOX.

Bug

[PDFBOX-4720] - cmap entries "<0000> <FFFF> <0000>" are cut
[PDFBOX-4722] - TestTextStripper doesn't detect when less output
[PDFBOX-4724] - Wrong calculation of position in InputStreamSource#readFully
[PDFBOX-4727] - ExtractEmbeddedFiles.java example uses name tree keys as file names
[PDFBOX-4730] - /OC in form and image XObjects not handled
[PDFBOX-4738] - getDocument().getObjects() returns nothing for split result documents
[PDFBOX-4741] - NullPointerException in PlainText constructor
[PDFBOX-4742] - Incorrect handling of float Infinity and NaN
[PDFBOX-4745] - COSObjectKey.hashCode doesn't work for generation numbers > 0
[PDFBOX-4750] - java.io.IOException: Error:Unknown type in content stream:COSNull{}
[PDFBOX-4753] - NumberFormatException while parsing a certain PDF document
[PDFBOX-4755] - Fonts improperly rendered
[PDFBOX-4756] - ScratchFileBuffer seek beyond the last page
[PDFBOX-4760] - wordSeparator not being inserted when word ends with " "
[PDFBOX-4763] - Can't get inline image raw data
[PDFBOX-4765] - NPE in ExtractImages.ImageGraphicsEngine().run()
[PDFBOX-4771] - JPEG image with transparency can't be extracted
[PDFBOX-4772] - Improve memory consumption of PDAbstractAppearanceHandler (2)
[PDFBOX-4777] - Avoid OOM for malformed PDFs using a huge First valkue within object streams

New Feature

[PDFBOX-4721] - Move Apache PDFBox from a low-API model

Improvement

[PDFBOX-4734] - ExtractImages should create CCITT G4 compressed TIFF files when possible
[PDFBOX-4735] - WriteDecodedDoc should create an xref table instead of an xref stream
[PDFBOX-4762] - Inconsistent handling of incorrect data
[PDFBOX-4766] - PDInlineImage.getSuffix() returns null
[PDFBOX-4779] - PDFBOX: Update Bouncy Castle Crypto to version 1.64

Task

[PDFBOX-4757] - Enable as much PDAcroFormFlattenTest tests as possible
[PDFBOX-4759] - Add tests for PDFBOX-4153 and PDFBOX-4490

Sub-task

[PDFBOX-4731] - Support RenderDestination
[PDFBOX-4732] - Support ImageType

Release Contents
----------------

This release consists of a single source archive packaged as a zip file.
The archive can be unpacked with the jar tool from your JDK installation.
See the README.txt file for instructions on how to build this release.

The source archive is accompanied by a SHA512 checksum and a PGP signature
that you can use to verify the authenticity of your download.
The public key used for the PGP signature can be found at
https://www.apache.org/dist/pdfbox/KEYS.

About Apache PDFBox
-------------------

Apache PDFBox is an open source Java library for working with PDF documents.
This project allows creation of new PDF documents, manipulation of existing
documents and the ability to extract content from documents. Apache PDFBox
also includes several command line utilities. Apache PDFBox is published
under the Apache License, Version 2.0.

For more information, visit http://pdfbox.apache.org/

About The Apache Software Foundation
------------------------------------

Established in 1999, The Apache Software Foundation provides organizational,
legal, and financial support for more than 100 freely-available,
collaboratively-developed Open Source projects. The pragmatic Apache License
enables individual and commercial users to easily deploy Apache software;
the Foundation's intellectual property framework limits the legal exposure
of its 2,500+ contributors.

For more information, visit http://www.apache.org/
