<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.asr.appframework.server.mapper.mapper.auto.UserLoginHistoryMapper">
  <resultMap id="BaseResultMap" type="cn.asr.appframework.server.mapper.model.auto.UserLoginHistory">
    <!--@mbg.generated-->
    <!--@Table userLoginHistory-->
    <id column="UserId" jdbcType="INTEGER" property="userId" />
    <id column="IP" jdbcType="VARCHAR" property="IP" />
    <result column="LastLoginDateTime" jdbcType="TIMESTAMP" property="lastLoginDateTime" />
    <result column="LoginSuccess" jdbcType="BOOLEAN" property="loginSuccess" />
    <result column="LoginFailedCount" jdbcType="INTEGER" property="loginFailedCount" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    UserId, IP, LastLoginDateTime, LoginSuccess, LoginFailedCount
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from userLoginHistory
    where UserId = #{userId,jdbcType=INTEGER}
      and IP = #{IP,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    <!--@mbg.generated-->
    delete from userLoginHistory
    where UserId = #{userId,jdbcType=INTEGER}
      and IP = #{IP,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.asr.appframework.server.mapper.model.auto.UserLoginHistory">
    <!--@mbg.generated-->
    insert into userLoginHistory (UserId, IP, LastLoginDateTime, 
      LoginSuccess, LoginFailedCount)
    values (#{userId,jdbcType=INTEGER}, #{IP,jdbcType=VARCHAR}, #{lastLoginDateTime,jdbcType=TIMESTAMP}, 
      #{loginSuccess,jdbcType=BOOLEAN}, #{loginFailedCount,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.asr.appframework.server.mapper.model.auto.UserLoginHistory">
    <!--@mbg.generated-->
    update userLoginHistory
    set LastLoginDateTime = #{lastLoginDateTime,jdbcType=TIMESTAMP},
      LoginSuccess = #{loginSuccess,jdbcType=BOOLEAN},
      LoginFailedCount = #{loginFailedCount,jdbcType=INTEGER}
    where UserId = #{userId,jdbcType=INTEGER}
      and IP = #{IP,jdbcType=VARCHAR}
  </update>
</mapper>